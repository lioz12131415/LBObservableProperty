// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target arm64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name LBObservablePropertyXCFramework
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
@_exported import LBObservablePropertyXCFramework
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
extension LBObservablePropertyXCFramework._LBObservableProperty {
  open class _LBObserve {
    open func send(_ newValue: Value)
    open func removeObserver(_ target: ObjectiveC.NSObject)
    open func onChange(_ target: ObjectiveC.NSObject, _ block: @escaping (_ newValue: Value) -> Swift.Void)
    public init()
    @objc deinit
  }
}
@propertyWrapper open class _LBObservableProperty<Value> {
  public var value: Value? {
    get
  }
  open var wrappedValue: Value {
    get
    set
  }
  open var projectedValue: LBObservablePropertyXCFramework._LBObservableProperty<Value>._LBObserve {
    get
  }
  open var observe: LBObservablePropertyXCFramework._LBObservableProperty<Value>._LBObserve
  public init(wrappedValue: Value)
  @objc deinit
}
